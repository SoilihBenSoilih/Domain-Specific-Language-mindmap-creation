/*
 * generated by Xtext 2.14.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mindMap_CarteMentale.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mindMap_CarteMentale.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mindMap_CarteMentale.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMindMap
entryRuleMindMap
:
{ before(grammarAccess.getMindMapRule()); }
	 ruleMindMap
{ after(grammarAccess.getMindMapRule()); } 
	 EOF 
;

// Rule MindMap
ruleMindMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMindMapAccess().getGroup()); }
		(rule__MindMap__Group__0)?
		{ after(grammarAccess.getMindMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCentralTopic
entryRuleCentralTopic
:
{ before(grammarAccess.getCentralTopicRule()); }
	 ruleCentralTopic
{ after(grammarAccess.getCentralTopicRule()); } 
	 EOF 
;

// Rule CentralTopic
ruleCentralTopic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCentralTopicAccess().getGroup()); }
		(rule__CentralTopic__Group__0)
		{ after(grammarAccess.getCentralTopicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainTopic
entryRuleMainTopic
:
{ before(grammarAccess.getMainTopicRule()); }
	 ruleMainTopic
{ after(grammarAccess.getMainTopicRule()); } 
	 EOF 
;

// Rule MainTopic
ruleMainTopic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainTopicAccess().getGroup()); }
		(rule__MainTopic__Group__0)
		{ after(grammarAccess.getMainTopicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubTopic
entryRuleSubTopic
:
{ before(grammarAccess.getSubTopicRule()); }
	 ruleSubTopic
{ after(grammarAccess.getSubTopicRule()); } 
	 EOF 
;

// Rule SubTopic
ruleSubTopic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubTopicAccess().getGroup()); }
		(rule__SubTopic__Group__0)
		{ after(grammarAccess.getSubTopicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMarker
entryRuleMarker
:
{ before(grammarAccess.getMarkerRule()); }
	 ruleMarker
{ after(grammarAccess.getMarkerRule()); } 
	 EOF 
;

// Rule Marker
ruleMarker 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMarkerAccess().getSymbolAssignment()); }
		(rule__Marker__SymbolAssignment)
		{ after(grammarAccess.getMarkerAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleENTIER
entryRuleENTIER
:
{ before(grammarAccess.getENTIERRule()); }
	 ruleENTIER
{ after(grammarAccess.getENTIERRule()); } 
	 EOF 
;

// Rule ENTIER
ruleENTIER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getENTIERAccess().getINTTerminalRuleCall()); }
			(RULE_INT)
			{ after(grammarAccess.getENTIERAccess().getINTTerminalRuleCall()); }
		)
		(
			{ before(grammarAccess.getENTIERAccess().getINTTerminalRuleCall()); }
			(RULE_INT)*
			{ after(grammarAccess.getENTIERAccess().getINTTerminalRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCHAINE
entryRuleCHAINE
:
{ before(grammarAccess.getCHAINERule()); }
	 ruleCHAINE
{ after(grammarAccess.getCHAINERule()); } 
	 EOF 
;

// Rule CHAINE
ruleCHAINE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getCHAINEAccess().getIDTerminalRuleCall()); }
			(RULE_ID)
			{ after(grammarAccess.getCHAINEAccess().getIDTerminalRuleCall()); }
		)
		(
			{ before(grammarAccess.getCHAINEAccess().getIDTerminalRuleCall()); }
			(RULE_ID)*
			{ after(grammarAccess.getCHAINEAccess().getIDTerminalRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group__0__Impl
	rule__MindMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getMindMapKeyword_0()); }
	'MindMap'
	{ after(grammarAccess.getMindMapAccess().getMindMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group__1__Impl
	rule__MindMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getGroup_1()); }
	(rule__MindMap__Group_1__0)?
	{ after(grammarAccess.getMindMapAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group__2__Impl
	rule__MindMap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getTitleAssignment_2()); }
	(rule__MindMap__TitleAssignment_2)
	{ after(grammarAccess.getMindMapAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getCentraltopicAssignment_3()); }
	(rule__MindMap__CentraltopicAssignment_3)
	{ after(grammarAccess.getMindMapAccess().getCentraltopicAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MindMap__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group_1__0__Impl
	rule__MindMap__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getMindMapAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group_1__1__Impl
	rule__MindMap__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getMarkersAssignment_1_1()); }
	(rule__MindMap__MarkersAssignment_1_1)*
	{ after(grammarAccess.getMindMapAccess().getMarkersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MindMap__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMindMapAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getMindMapAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CentralTopic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group__0__Impl
	rule__CentralTopic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getCentralTopicKeyword_0()); }
	'CentralTopic'
	{ after(grammarAccess.getCentralTopicAccess().getCentralTopicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group__1__Impl
	rule__CentralTopic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getGroup_1()); }
	(rule__CentralTopic__Group_1__0)?
	{ after(grammarAccess.getCentralTopicAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group__2__Impl
	rule__CentralTopic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getNameAssignment_2()); }
	(rule__CentralTopic__NameAssignment_2)
	{ after(grammarAccess.getCentralTopicAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getMaintopicAssignment_3()); }
	(rule__CentralTopic__MaintopicAssignment_3)*
	{ after(grammarAccess.getCentralTopicAccess().getMaintopicAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CentralTopic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group_1__0__Impl
	rule__CentralTopic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getCentralTopicAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group_1__1__Impl
	rule__CentralTopic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getMarkersAssignment_1_1()); }
	(rule__CentralTopic__MarkersAssignment_1_1)*
	{ after(grammarAccess.getCentralTopicAccess().getMarkersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CentralTopic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCentralTopicAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getCentralTopicAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainTopic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group__0__Impl
	rule__MainTopic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getMainTopicKeyword_0()); }
	'MainTopic'
	{ after(grammarAccess.getMainTopicAccess().getMainTopicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group__1__Impl
	rule__MainTopic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getGroup_1()); }
	(rule__MainTopic__Group_1__0)?
	{ after(grammarAccess.getMainTopicAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group__2__Impl
	rule__MainTopic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getNameAssignment_2()); }
	(rule__MainTopic__NameAssignment_2)
	{ after(grammarAccess.getMainTopicAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getSubtopicAssignment_3()); }
	(rule__MainTopic__SubtopicAssignment_3)*
	{ after(grammarAccess.getMainTopicAccess().getSubtopicAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainTopic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group_1__0__Impl
	rule__MainTopic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getMainTopicAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group_1__1__Impl
	rule__MainTopic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getMarkersAssignment_1_1()); }
	(rule__MainTopic__MarkersAssignment_1_1)*
	{ after(grammarAccess.getMainTopicAccess().getMarkersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainTopic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainTopicAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getMainTopicAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubTopic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group__0__Impl
	rule__SubTopic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getSubTopicKeyword_0()); }
	'SubTopic'
	{ after(grammarAccess.getSubTopicAccess().getSubTopicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group__1__Impl
	rule__SubTopic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getGroup_1()); }
	(rule__SubTopic__Group_1__0)?
	{ after(grammarAccess.getSubTopicAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group__2__Impl
	rule__SubTopic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getNameAssignment_2()); }
	(rule__SubTopic__NameAssignment_2)
	{ after(grammarAccess.getSubTopicAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getSubtopicAssignment_3()); }
	(rule__SubTopic__SubtopicAssignment_3)*
	{ after(grammarAccess.getSubTopicAccess().getSubtopicAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubTopic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group_1__0__Impl
	rule__SubTopic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getSubTopicAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group_1__1__Impl
	rule__SubTopic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getMarkersAssignment_1_1()); }
	(rule__SubTopic__MarkersAssignment_1_1)*
	{ after(grammarAccess.getSubTopicAccess().getMarkersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTopic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTopicAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getSubTopicAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MindMap__MarkersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMindMapAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
		ruleMarker
		{ after(grammarAccess.getMindMapAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMindMapAccess().getTitleCHAINEParserRuleCall_2_0()); }
		ruleCHAINE
		{ after(grammarAccess.getMindMapAccess().getTitleCHAINEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MindMap__CentraltopicAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMindMapAccess().getCentraltopicCentralTopicParserRuleCall_3_0()); }
		ruleCentralTopic
		{ after(grammarAccess.getMindMapAccess().getCentraltopicCentralTopicParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__MarkersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCentralTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
		ruleMarker
		{ after(grammarAccess.getCentralTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCentralTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
		ruleCHAINE
		{ after(grammarAccess.getCentralTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CentralTopic__MaintopicAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCentralTopicAccess().getMaintopicMainTopicParserRuleCall_3_0()); }
		ruleMainTopic
		{ after(grammarAccess.getCentralTopicAccess().getMaintopicMainTopicParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__MarkersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
		ruleMarker
		{ after(grammarAccess.getMainTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
		ruleCHAINE
		{ after(grammarAccess.getMainTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainTopic__SubtopicAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainTopicAccess().getSubtopicSubTopicParserRuleCall_3_0()); }
		ruleSubTopic
		{ after(grammarAccess.getMainTopicAccess().getSubtopicSubTopicParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__MarkersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
		ruleMarker
		{ after(grammarAccess.getSubTopicAccess().getMarkersMarkerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
		ruleCHAINE
		{ after(grammarAccess.getSubTopicAccess().getNameCHAINEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTopic__SubtopicAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTopicAccess().getSubtopicSubTopicParserRuleCall_3_0()); }
		ruleSubTopic
		{ after(grammarAccess.getSubTopicAccess().getSubtopicSubTopicParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Marker__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMarkerAccess().getSymbolENTIERParserRuleCall_0()); }
		ruleENTIER
		{ after(grammarAccess.getMarkerAccess().getSymbolENTIERParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
